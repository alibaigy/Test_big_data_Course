[cloudera@quickstart ~]$ hadoop fs -mkdir /StoreX
[cloudera@quickstart ~]$ hadoop fs -copyFromLocal Desktop/trans_log.csv /myData
-----------------------------------------------------------------------
hive (stores)> create database stores location '/StoreX'

hive (stores)> create table Store (store_id int , store_num varchar(10), city varchar (25), address varchar (100), open_date string, close_date string) row format delimited fields terminated by ',';

hive (stores)> load data local inpath 'Desktop/store.csv' into table store;

hive (stores)> create table employee (employee_id int, employee_num int, store_num varchar (25), employee_name varchar (50), Joining_date string, designation varchar(50)) row format delimited fields terminated by ',';

hive (stores)> load data local inpath 'Desktop/employee.csv' into table employee;

hive (stores)> create table promotion (Promo_code_id int, promo_code varchar(20), description varchar(50), promo_start_date string, Promo_end_date string) row format delimited fields terminated by ',';

hive (stores)>  load data local inpath 'Desktop/promotions.csv' into table promotion;

hive (stores)> create table loyalty ( Loyalty_member_num int, cust_num int, card_no varchar(10), joining_date string, points float) row format delimited fields terminated by ',';

hive (stores)> load data local inpath 'Desktop/loyalty.csv' into table loyalty;

hive (stores)> create table product (product_id int, product_code varchar(50), add_date string, remove_Date string) row format delimited fields terminated by ',';

hive (stores)> load data local inpath 'Desktop/product.csv' into table product;

hive (stores)> create table trans_code (Trans_code_id int , trans_code varchar(2),description varchar(100)) row format delimited fields terminated by ',';

hive (stores)> load data local inpath 'Desktop/trans_code.csv' into table trans_code;




-----------------------------------------------------------------------------------
-- [cloudera@quickstart ~]$ impala-shell
start.cloudera:21000] > create table trans_log (F01 string,F02 string,F03 string,F04 string,F05 string,F06 string,F07 string,F08 string,F09 string,F10 string,F11 string) row format delimited fields terminated by ',';

-- back in Cloudera
[cloudera@quickstart ~]$ hadoop fs -copyFromLocal Desktop/trans_log /StoreX/trans_log;

-- [cloudera@quickstart ~]$ impala-shell
[quickstart.cloudera:21000] > refresh trans_log;
[quickstart.cloudera:21000] > select * from trans_log;


[quickstart.cloudera:21000] > create table pos (Trans_seq int, Trans_code string, event_code int, store_num string, POS_emp_num int, lane int, dates string,time string);

[quickstart.cloudera:21000] > create table cashdoor (Trans_seq int, Trans_code string, event_code int, store_num string, POS_emp_num int, lane int, dates string,time string);

[quickstart.cloudera:21000] > create table cash (Trans_seq int, Trans_code string, payment_mode string, amount double, 	change_in_return double, store_num string, POS_emp_num int, lane int, dates string,time string);

[quickstart.cloudera:21000] > create table card (Trans_seq int, Trans_code string, payment_mode string, encrypted_card string, amount double, store_num string, POS_emp_num int, lane int, dates string,time string);

[quickstart.cloudera:21000] > create table loyaltycard (Trans_seq int, Trans_code string, loyalty_card_no string, store_num string, POS_emp_num int, lane int, dates string,time string);

[quickstart.cloudera:21000] > create table Promo (Trans_seq int, Trans_code string, Promo_code string, store_num string, POS_emp_num int, lane int, dates string,time string);

[quickstart.cloudera:21000] > create table staging_Items (Trans_id string,Trans_seq int, Trans_code string, scan_seq int, Product_code string, amount double, discount double, add_remove_flag int, store_num string, POS_emp_num int, lane int, dates string,time string);


[quickstart.cloudera:21000] > create table Items (Trans_id string,Trans_seq int, Trans_code string, scan_seq int, Product_code string, amount double, discount double, add_remove_flag int, store_num string, POS_emp_num int, lane int) partitioned by ( dates string) row format delimited fields terminated by ',';



[quickstart.cloudera:21000] > insert into pos select cast(f01 as int), f02, cast(f03 as int), f04,cast(f05 as int), cast(f06 as int), substr(f07,1,10), substr(f07,12,5) from trans_log where f02 = 'PS';

[quickstart.cloudera:21000] > insert into cashdoor select cast(f01 as int), f02, cast(f03 as int), f04,cast(f05 as int), cast(f06 as int), substr(f07,1,10), substr(f07,12,5) from trans_log where f02 = 'CC';

[quickstart.cloudera:21000] > insert into cash select cast(f01 as int), f02, f03, cast(f04 as double) , cast(f05 as double),  f06,cast(f07 as int), cast(f08 as int), substr(f09,1,10), substr(f09,12,5) from trans_log where f02 = 'BB' AND f03 = 'CASH';

[quickstart.cloudera:21000] > insert into card select cast(f01 as int), f02, f03,f04 , cast(f05 as double),  f06,cast(f07 as int), cast(f08 as int), substr(f09,1,10), substr(f09,12,5) from trans_log where f02 = 'BB' AND f03 = 'CARD';

[quickstart.cloudera:21000] > insert into loyaltycard select cast(f01 as int), f02, f03 , f04,cast(f05 as int), cast(f06 as int), substr(f07,1,10), substr(f07,12,5) from trans_log where f02 = 'LL';

[quickstart.cloudera:21000] > insert into Promo select cast(f01 as int), f02, f03 , f04,cast(f05 as int), cast(f06 as int), substr(f07,1,10), substr(f07,12,5) from trans_log where f02 = 'PP';

[quickstart.cloudera:21000] > insert into staging_Items select concat(substr(f11,1,4),substr(f11,6,2),substr(f11,9,2),concat(substr('00000',1,5-char_length(cast(store.store_id as string))) ,cast(store.store_id as string)),concat(substr('00',1,2-char_length(f10)),f10),concat(substr('0000',1,4-char_length(f01)),f01)), cast(f01 as int), f02, cast(f03 as int) , f04,cast(f05 as double), cast(f06 as double), cast(f07 as int),f08,cast(f09 as int), cast(f10 as int), substr(f11,1,10), substr(f11,12,5) from trans_log left join store on store.store_num = trans_log.f08 where f02 = 'TT';

[quickstart.cloudera:21000] > insert into items partition (dates) select Trans_id ,Trans_seq , Trans_code, scan_seq , Product_code , amount , discount , add_remove_flag , store_num , POS_emp_num , lane, dates from staging_Items;



--------------------------------- To export data to mySQL

mysql> create table Items (Trans_id varchar(50),Trans_seq int, Trans_code varchar(10), scan_seq int, Product_code varchar(25), amount double, discount double, add_remove_flag int, store_num varchar(10), POS_emp_num int, lane int);


[cloudera@quickstart ~]$ sqoop export --connect jdbc:mysql://localhost:3306/retail_db --username retail_dba --password cloudera --table Items --fields-terminated-by ',' --export-dir /StoreX/items/dates=2018-01-01










-----------------------------------------------------------------------------------------
from pyspark import SparkContext, SparkConf
from pyspark.sql import SQLContext
from pyspark.sql.types import *

conf = SparkConf().setAppName("myFirstApp").setMaster("local")
sc = SparkContext(conf=conf)
textFile = sc.textFile("/myData/trans_log.csv")
textFile.first()


from pyspark import SQLContext
from pyspark.sql import Row
sql_c = SQLContext(sc)
textFile = sc.textFile("/myData/trans_log.csv")
textFile.collect()
readFile = textFile.map(lambda x: x.split(',')).map(lambda x: Row(F01 = x[0], F02 = x[1], F03 = x[2],F04 = x[3],F05 = x[4],F06 = x[5],F07 = x[6],F08 = x[7],F09 = x[8],F10 = x[9],F11 = x[10]))
readFile.collect()
df = sqlContext.createDataFrame(readFile)
df.registerTempTable("Trans_log")
PS = sqlContext.sql(" Select * from trans_log")
PS.show()

PS = sqlContext.sql("Select F01,F02,F03,F04,F05,F06,F07 from trans_log where F02='PS'")
TT = sqlContext.sql("Select F01,F02,F03,F04,F05,F06,F07,F08,F09,F10,F11 from trans_log where F02='TT'")
LL = sqlContext.sql("Select F01,F02,F03,F04,F05,F06,F07 from trans_log where F02='LL'")
PP = sqlContext.sql("Select F01,F02,F03,F04,F05,F06,F07 from trans_log where F02='PP'")
BB = sqlContext.sql("Select F01,F02,F03,F04,F05,F06,F07,F08,F09 from trans_log where F02='BB'")
CC = sqlContext.sql("Select F01,F02,F03,F04,F05,F06,F07 from trans_log where F02='CC'")

PS.rdd.map(lambda x: ",".join(map(str, x))).coalesce(1).saveAsTextFile("/mydata/ps")
TT.rdd.map(lambda x: ",".join(map(str, x))).coalesce(1).saveAsTextFile("/mydata/tt")
LL.rdd.map(lambda x: ",".join(map(str, x))).coalesce(1).saveAsTextFile("/mydata/ll")
PP.rdd.map(lambda x: ",".join(map(str, x))).coalesce(1).saveAsTextFile("/mydata/pp")
BB.rdd.map(lambda x: ",".join(map(str, x))).coalesce(1).saveAsTextFile("/mydata/bb")
CC.rdd.map(lambda x: ",".join(map(str, x))).coalesce(1).saveAsTextFile("/mydata/cc")